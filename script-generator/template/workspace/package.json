{
  "name": "inh-demo-system",
  "version": "1.2.1",
  "description": "",
  "main": "index.js",
  "keywords": [],
  "author": "",
  "license": "ISC",
  "engines": {
   "node": ">=22.16.0 <25.0.0"
  },
  "packageManager": "pnpm@10.4.1+sha256.4b702887986995933d4300836b04d6d02a43bc72b52e4f7e93a4ca608b959197",
  "scripts": {
    "lint": "nx lint",
    "lint:all": "nx run-many --target=lint --all",
    "lint:apps": "nx run-many --target=lint --projects=*web*",
    "lint:frontend-apps": "nx run-many --target=lint --projects=*web-*",
    "lint:backend-apps": "nx run-many --target=lint --projects=*webapi*,*webpub*,*websub*,*webio*",
    "lint:libs": "nx run-many --target=lint --projects=@inh-demo-system/*",
    "lint:frontend-libs": "nx run-many --target=lint --projects=*/ui*,*/feature*,**/common-functions,@inh-demo-system/*-lib",
    "lint:backend-libs": "nx run-many --target=lint --projects=**/common-functions*,**/*api-*,**/*-data-store*",
    "test:all": "nx run-many --target=test --all",
    "test:apps": "nx run-many --target=test --projects=*web*",
    "test:frontend-apps": "nx run-many --target=test --projects=*web-*",
    "test:backend-apps": "nx run-many --target=test --projects=*webapi*,*webpub*,*websub*,*webio*",
    "test:libs": "nx run-many --target=build --projects=@inh-demo-system/*",
    "test:frontend-libs": "nx run-many --target=test --projects=*/ui*,*/feature*,**/common-functions,@inh-demo-system/*-lib",
    "test:backend-libs": "nx run-many --target=test --projects=**/common-functions*,**/*api-*,**/*-data-store*",
    "build": "nx build",
    "build:all": "nx run-many --target=build --all",
    "release": "nx run-many --target=build --all",
    "release:all": "nx run-many --target=release --all && nx run-many --target=release-storybook --all",
    "build:apps": "nx run-many --target=build --projects=*web*",
    "build:frontend-apps": "nx run-many --target=build --projects=*web-*",
    "build:backend-apps": "nx run-many --target=build --projects=*webapi*,*webpub*,*websub*,*webio*",
    "build:libs": "nx run-many --target=build --projects=@inh-demo-system/*",
    "build:frontend-libs": "nx run-many --target=build --projects=*/ui*,*/feature*,**/common-functions,@inh-demo-system/*-lib",
    "build:backend-libs": "nx run-many --target=build --projects=**/common-functions*,**/*api-*,**/*-data-store*",
    "build:features": "nx run-many --target=build --projects=*/feature*",
    "build:ui": "nx run-many --target=build --projects=*/ui*",
    "build:api": "nx run-many --target=build --projects=**/*api-*",
    "build:store": "nx run-many --target=build --projects=**/*-data-store*",
    "build:functions": "nx run-many --target=build --projects=**/*-functions*",
    "build:others": "nx run-many --target=build --projects=**/*plugin*",
    "show:graph": "nx graph",
    "commit": "git-cz",
    "format:all": "nx run-many --target=format --all",
    "format-check:all": "nx run-many --target=format-check --all",
    "test": "nx test",
        "// ==================== üóÑÔ∏è Cache Management (Simplified) ====================": "",
    "// === üìä Daily Use (Main Commands) ===": "",
    "cache:check": "./tools/nx-script/cache-utilities.sh validate-size",
    "cache:stats": "./tools/nx-script/cache-stats-v2.sh",
    "cache:clean": "./tools/nx-script/nx-cache-cleanup-v2.sh",
    "cache:help": "echo 'üóÑÔ∏è Cache Commands:' && echo '  üìä Daily:' && echo '    cache:check     - Health check + recommendations' && echo '    cache:stats     - Detailed statistics' && echo '    cache:clean     - Clean old cache entries' && echo '  üîç Analysis:' && echo '    cache:analyze   - Detailed analysis + problems' && echo '    cache:projects  - List all projects' && echo '    cache:largest   - Show largest entries' && echo '    cache:issues    - Find orphaned files/db entries' && echo '  üßπ Maintenance:' && echo '    cache:optimize  - Full optimization (recommended)' && echo '    cache:clean:files - Clean orphaned files only' && echo '    cache:clean:db   - Clean orphaned DB entries only' && echo '    cache:reset     - Emergency reset' && echo '  üîß Project Specific:' && echo '    cache:project:info <name>   - Show all cache for project' && echo '    cache:project:hash <name> <target> - Get current hash' && echo '    cache:clean:project <name> [keep] - Clean project cache' && echo '  ü§ñ CI/CD:' && echo '    cache:ci        - CI validation' && echo '' && echo 'üí° For project cache: pnpm cache:project:info <name>'",
    "// === üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå (Find & Analysis) ===": "",
    "cache:list": "./tools/nx-script/cache-utilities.sh projects",
    "cache:list:recent": "./tools/nx-script/cache-utilities.sh recent 15",
    "cache:find:largest": "./tools/nx-script/cache-utilities.sh largest 10",
    "cache:find:orphans": "./tools/nx-script/cache-utilities.sh orphaned",
    "cache:find:old": "./tools/nx-script/cache-utilities.sh many-versions 3",
    "cache:issues": "./tools/nx-script/cache-utilities.sh orphaned && echo '' && ./tools/nx-script/cache-utilities.sh many-versions 3",
    "// === üßπ Cleanup & Maintenance ===": "",
    "cache:optimize": "./tools/nx-script/nx-cache-cleanup-v2.sh && ./tools/nx-script/cache-utilities.sh clean-orphaned && ./tools/nx-script/cache-utilities.sh clean-suspicious && ./tools/nx-script/cache-utilities.sh clean-db-orphans",
    "cache:fix": "./tools/nx-script/cache-repair.sh",
    "cache:fix:files": "./tools/nx-script/cache-utilities.sh clean-orphaned",
    "cache:fix:db": "./tools/nx-script/cache-utilities.sh clean-db-orphans",
    "cache:clean:latest": "./tools/nx-script/nx-cache-cleanup-v2.sh 1",
    "cache:reset": "echo 'üö® This will delete ALL cache!' && read -p 'Continue? (y/N): ' confirm && [ \"$confirm\" = 'y' ] && rm -rf .nx/cache && nx reset",
    "// === üîß Advanced & Debug ===": "",
    "cache:debug": "./tools/nx-script/cache-diagnostic.sh",
    "cache:backup": "./tools/nx-script/cache-utilities.sh backup",
    "cache:search": "./tools/nx-script/cache-utilities.sh search",
    "cache:util": "./tools/nx-script/cache-utilities.sh ",
    "// === üîß ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Project ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ (Project Specific) ===": "",
    "cache:project": "./tools/nx-script/project-cache-details.sh",
    "cache:project:info": "./tools/nx-script/project-cache-details.sh",
    "cache:project:issues": "./tools/nx-script/cache-utilities.sh issues-for-project",
    "cache:project:clean": "./tools/nx-script/cache-utilities.sh clean-project",
    "cache:project:optimize": "./tools/nx-script/project-optimize.sh",
    "// === ü§ñ CI/CD Integration ===": "",
    "cache:ci": "./tools/nx-script/cache-validation.sh validate-ci",
    "cache:ci:auto-fix": "./tools/nx-script/cache-validation.sh validate-ci || (echo 'üîß Auto-fixing...' && pnpm cache:optimize && ./tools/nx-script/cache-validation.sh validate-ci)",
    "cache:ci:clean:latest": "./tools/nx-script/nx-cache-cleanup-v2.sh 1 -y",
    "cache:ci:fix": "./tools/nx-script/cache-repair.sh -y -v",
    "// === üëÄ Monitoring (Optional) ===": "",
    "cache:watch": "watch -n 10 'pnpm cache:check'",
    "cache:monitor": "echo 'üìä Cache Status:' && du -sh .nx/cache 2>/dev/null && echo 'Entries:' && find .nx/cache -name '[0-9]*' -type d 2>/dev/null | wc -l",
    "// === ü§ñ NX Daemon Management ===": "",
    "cache:daemon:status": "nx status 2>/dev/null && echo '‚úÖ NX Daemon is running' || echo '‚ùå NX Daemon is stopped'",
    "cache:daemon:stop": "nx reset && echo 'üõë NX Daemon stopped'",
    "cache:daemon:start": "nx --version >/dev/null 2>&1 && echo 'üöÄ NX Daemon starting...'",
    "cache:daemon:restart": "npm run cache:daemon:stop && sleep 2 && npm run cache:daemon:start",
    "// === üîç Safety Checks ===": "",
    "cache:check:safety": "bash tools/remote-cache/cache-helper.sh status | grep -E '(Daemon|SQLite)'",
    "cache:check:sqlite": "find .nx -name '*.wal' -o -name '*.shm' 2>/dev/null | head -5 | while read f; do echo \"‚ö†Ô∏è  Active: $f\"; done || echo '‚úÖ No active SQLite files'",
    "cache:check:integrity": "[ -d .nx/cache ] && echo '‚úÖ Cache directory exists' || echo '‚ùå No cache directory' && [ -f .nx/cache/d2/metadata.json ] && echo '‚úÖ Cache metadata exists' || echo '‚ö†Ô∏è  No cache metadata'",
    "// === üëÄ Remote Cache ===": "",
    "cache:init": "bash tools/remote-cache/cache-helper.sh init",
    "cache:compress": "bash tools/remote-cache/cache-helper.sh compress",
    "cache:extract": "bash tools/remote-cache/cache-helper.sh extract",
    "cache:remote:download": "./tools/remote-cache/backup.sh download",
    "cache:remote:download:current": "./tools/remote-cache/backup.sh download $(git rev-parse --short HEAD) tmp/download",
    "cache:remote:upload": "./tools/remote-cache/backup.sh upload",
    "cache:remote:upload:current": "./tools/remote-cache/backup.sh upload $(git rev-parse --short HEAD) tmp/upload",
    "cache:remote:status": "./tools/remote-cache/backup.sh status",
    "cache:remote:reset": "./tools/remote-cache/backup.sh reset",
    "cache:full:backup": "bash tools/remote-cache/cache-helper.sh full-backup $(git rev-parse --short HEAD)",
    "cache:full:restore": "bash tools/remote-cache/cache-helper.sh full-restore $(git rev-parse --short HEAD)",
    "cache:remote:help": "bash tools/remote-cache/cache-helper.sh help"
  },

  "devDependencies": {
    "@changesets/cli": "^2.27.5",
    "@eslint-community/eslint-plugin-eslint-comments": "^4.4.1",
    "@eslint/js": "^9.18.0",
    "@next/eslint-plugin-next": "^15.1.5",
    "@storybook/addon-essentials": "^8.5.0",
    "@storybook/addon-interactions": "^8.5.0",
    "@storybook/addon-links": "^8.5.0",
    "@storybook/blocks": "^8.5.0",
    "@storybook/react": "^8.5.0",
    "@storybook/react-vite": "^8.5.0",
    "@storybook/test": "^8.5.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.2.0",
    "@testing-library/user-event": "^14.6.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/react": "^18.3.12",
    "@types/react-dom": "^18.3.1",
    "@typescript-eslint/eslint-plugin": "^8.20.0",
    "@typescript-eslint/parser": "^8.20.0",
    "@vitejs/plugin-react": "^4.3.4",
    "autoprefixer": "^10.4.20",
    "axios": "^1.7.2",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-jest": "^28.11.0",
    "eslint-plugin-react": "^7.37.4",
    "eslint-plugin-react-hooks": "^5.1.0",
    "git-cz": "^4.9.0",
    "glob": "^11.0.1",
    "globals": "^15.14.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-config": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-fixed-jsdom": "^0.0.9",
    "msw": "^2.7.0",
    "msw-storybook-addon": "^2.0.4",
    "npm-run-all": "^4.1.5",
    "nx": "19.1.0",
    "postcss": "^8.5.1",
    "prettier": "^3.4.2",
    "raw-loader": "^4.0.2",
    "rollup": "^4.31.0",
    "rollup-plugin-node-externals": "^8.0.0",
    "rollup-plugin-preserve-directives": "^0.4.0",
    "storybook": "^8.0.0",
    "tailwindcss": "^4.1.10",
    "@tailwindcss/postcss": "^4.1.10",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.2",
    "tsup": "6.6.0",
    "typescript": "~5.4.2",
    "vite": "^6.0.7",
    "vite-plugin-dts": "^4.5.0",
    "vite-plugin-environment": "^1.1.3",
    "vite-plugin-lib-inject-css": "^2.2.1",
    "vite-plugin-sass-dts": "^1.3.30"
  }
}
